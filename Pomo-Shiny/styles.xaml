<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Pomo_Shiny" xmlns:Converters="clr-namespace:Pomo_Shiny.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colours.xaml"/>
        <ResourceDictionary Source="Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="ContextMenuButtonStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="FontWeight" Value="Bold" />
        <!--<Setter Property="Visibility" Value="{Binding TimerOff, Converter={StaticResource BoolToVisibilityConverter}}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid>
                        <Path Fill="{TemplateBinding Background}"
                            Data="M10,0 h80 a10,10 0 0 1 10,10 a10,10 0 0 1 -10,10 h-80 a10,10 0 0 1 -10,-10 a10,10 0 0 1 10,-10 z" />
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="13"/>
                        <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="#FFFFFFFF" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="12" />
                        <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource ButtonBackground}" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Style.BasedOn>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Foreground" Value="{DynamicResource ListItemForegroundBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_38">
                                <Grid x:Name="Grid" Uid="Grid_49">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="17" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="14"/>
                                    </Grid.ColumnDefinitions>
                                    <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_12" Visibility="Hidden" VerticalAlignment="Center"/>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_33"/>
                                    <TextBlock x:Name="InputGestureText" Grid.Column="2" DockPanel.Dock="Right" Margin="5,2,0,2" Text="{TemplateBinding InputGestureText}" Uid="TextBlock_10"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                </Trigger>
                                <DataTrigger Value="False" Binding="{Binding Source, ElementName=MenuItemIcon}">
                                    <Setter Property="VerticalAlignment" TargetName="ContentPresenter" Value="Center"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Margin" Value="0,1"/>
                        <Setter Property="Padding" Value="6,3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_39">
                                        <DockPanel x:Name="DockPanel" Uid="DockPanel_4">
                                            <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_13" Visibility="Collapsed" VerticalAlignment="Center"/>
                                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_35"/>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--<Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                        </Trigger>-->
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Margin" Value="0,1"/>
                        <Setter Property="Padding" Value="6,3"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_41">
                                        <DockPanel x:Name="DockPanel" Uid="DockPanel_5">
                                            <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_14" Visibility="Collapsed" VerticalAlignment="Center"/>
                                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_37"/>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="DockPanel.Dock" Value="Top"/>
                        <Setter Property="Padding" Value="0,2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_42">
                                        <Grid x:Name="Grid" Uid="Grid_50">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="17" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition MinWidth="5" SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                                <ColumnDefinition Width="14"/>
                                            </Grid.ColumnDefinitions>
                                            <Path x:Name="GlyphPanel" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="4,0,6,0" Uid="Path_15" Visibility="Hidden" VerticalAlignment="Center"/>
                                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_39"/>
                                            <Path x:Name="Path" Grid.Column="3" DockPanel.Dock="Right" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" Margin="4,0,6,0" Uid="Path_16" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!--<Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                        </Trigger>-->
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuItem">
                        <Setter Property="DockPanel.Dock" Value="Top"/>
                        <Setter Property="Padding" Value="0,2"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource ListItemHighlightForegroundBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource ListItemHighlightBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource ListItemHighlightBorderBrush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource ListItemDisabledForegroundBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="100" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Visibility" Value="{Binding TimerOff, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path Fill="{TemplateBinding Background}"
                                Data="M10,0 h80 a10,10 0 0 1 10,10 a10,10 0 0 1 -10,10 h-80 a10,10 0 0 1 -10,-10 a10,10 0 0 1 10,-10 z" />
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="13"/>
                        <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="#FFFFFFFF" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="12" />
                        <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource ButtonBackground}" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>