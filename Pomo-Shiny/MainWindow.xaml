<Window x:Class="Pomo_Shiny.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pomo_Shiny"
        mc:Ignorable="d"
        Height="400" Width="400"
        d:DataContext="{d:DesignInstance local:MainWindowViewModel}"
        WindowStartupLocation="CenterScreen" Icon="unicorn2.png" WindowStyle="None" AllowsTransparency="True"
        Topmost="{Binding TimerOff}" IsManipulationEnabled="True"
        MouseDown="Window_MouseDown">
    <Window.Resources>
        <Color x:Key="ButtonBackground">#BFFFFFFF</Color>
        <Color x:Key="ButtonText">#FF640064</Color>
        <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{DynamicResource ButtonBackground}" />
        <SolidColorBrush x:Key="ButtonTextBrush" Color="{DynamicResource ButtonText}" />

        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonTextBrush}"/>
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Width" Value="100" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Path Fill="{TemplateBinding Background}"
                                  Data="M10,0 h80 a10,10 0 0 1 10,10 a10,10 0 0 1 -10,10 h-80 a10,10 0 0 1 -10,-10 a10,10 0 0 1 10,-10 z" />
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding TimerOff}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding TimerOff}" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <EventTrigger RoutedEvent="MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="13"/>
                                <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="#FFFFFFFF" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.200" Storyboard.TargetProperty="FontSize" To="12" />
                                <ColorAnimation Duration="0:0:0.100" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource ButtonBackground}" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="unicorn2.png" Stretch="Uniform" />
    </Window.Background>
    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Reset" Command="{Binding StartTimerCommand}" />
            <MenuItem Header="Stop" Command="{Binding StopTimerCommand}" />
            <MenuItem Header="Exit" Command="{Binding ExitCommand}" />
        </ContextMenu>
    </Window.ContextMenu>
    <Grid>
        <Button Content="Go again"
                Command="{Binding StartTimerCommand}"
                HorizontalAlignment="Left" Margin="150.873,164.825,0,0" Style="{StaticResource ButtonStyle}" />
        <Button Content="Take a break" Command="{Binding StartBreakTimerCommand}" HorizontalAlignment="Left"
                Margin="150.873,196.217,0,0" Style="{StaticResource ButtonStyle}" />
        <Label Content="{Binding RemainingTime.TotalSeconds}" HorizontalAlignment="Left" Margin="187,174,0,0"
               VerticalAlignment="Top" FontWeight="Bold" FontSize="16" RenderTransformOrigin="2.368,-1.129" Foreground="{StaticResource ButtonBackgroundBrush}">
            <Label.Style>
                <Style TargetType="{x:Type Label}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding TimerOff}" Value="True">
                        <Setter Property="Visibility" Value="Hidden" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TimerOff}" Value="False">
                        <Setter Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>
    </Grid>
</Window>