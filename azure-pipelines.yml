pool:
  vmImage: 'windows-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/Pomo-Shiny.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: '**/Tests.csproj'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: GitHubRelease@1
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    gitHubConnection: 'dynamictulip (1)'
    repositoryName: 'dynamictulip/Ponydorro'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: 'v$(MajorVersion).$(Build.BuildNumber)'
    assets: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'